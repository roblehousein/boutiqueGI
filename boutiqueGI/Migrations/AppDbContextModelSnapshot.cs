// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using boutiqueGI.Context;

#nullable disable

namespace boutiqueGI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("boutiqueGI.Models.Clients", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("CommandesId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CommandesId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("boutiqueGI.Models.Commandes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("char(36)");

                    b.Property<string>("ClientName")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateCommande")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Total_Price")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Commandes");
                });

            modelBuilder.Entity("boutiqueGI.Models.Produits", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Checked")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("CommandesId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("CommandesId1")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DateCrea")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateExp")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Qt")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Remise")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("CommandesId");

                    b.HasIndex("CommandesId1");

                    b.ToTable("Produits");
                });

            modelBuilder.Entity("boutiqueGI.Models.Clients", b =>
                {
                    b.HasOne("boutiqueGI.Models.Commandes", null)
                        .WithMany("Customers")
                        .HasForeignKey("CommandesId");
                });

            modelBuilder.Entity("boutiqueGI.Models.Commandes", b =>
                {
                    b.HasOne("boutiqueGI.Models.Clients", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("boutiqueGI.Models.Produits", b =>
                {
                    b.HasOne("boutiqueGI.Models.Commandes", null)
                        .WithMany("Panier")
                        .HasForeignKey("CommandesId");

                    b.HasOne("boutiqueGI.Models.Commandes", null)
                        .WithMany("Produits")
                        .HasForeignKey("CommandesId1");
                });

            modelBuilder.Entity("boutiqueGI.Models.Commandes", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Panier");

                    b.Navigation("Produits");
                });
#pragma warning restore 612, 618
        }
    }
}
